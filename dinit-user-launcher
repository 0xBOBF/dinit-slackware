#!/bin/bash
#
# Spawn a dinit user service for a user, and monitor when the session ends from (e)logind so we can 
# shutdown dinit cleanly.
# 

dinit_user_start () {
  # Create the runtime directory and set user's ownership:
  # We need to do this sine we will run before elogind, and
  # we want to link dinitctl here for runtime operation.
  runtimedir="/run/user/$uid"
  mkdir -p "$runtimedir" && chown -R ${name}:users $runtimedir

  # Spawn a dinit instance for the user, make the socket in home instead of
  # runtimedir, so elogind doesn't delete it automatically at session end.
  # Link the dinitctl socket to the runtimedir, so dinitctl defaults work
  # once XDG_RUNTIME_DIR is set:
  su -l -c "dinit -d /etc/dinit/user -p $home/.dinitctl &" $name
  su -l -c "ln -s $home/.dinitctl $runtimedir/dinitctl" $name
}

dinit_user_stop () {
  su -l -c "dinitctl shutdown" $name
}

# Get the user name PAM_USER:
if [ -n "$PAM_USER" ]; then
  name=$PAM_USER
else
  echo "Error: $0 wasn't called from PAM."
  exit 1
fi

# Test if name is valid, then get the id and home dir:
uid="$(id -u $name 2> /dev/null)"
if [ -z "$uid" ]; then
  echo "'$name' is not valid."
  exit 1
fi
home="$(grep $name /etc/passwd | cut -d: -f6)"

# Get a count of how many sessions the user has registered with elogind:
session_cnt="$(loginctl show-user $PAM_USER | sed -n 's/^Sessions=//p' | wc -w)"

# Start or stop dinit, based on PAM_TYPE. 
# Only run start if there are no existing sessions:
if [ "$PAM_TYPE" = "open_session" -a "$session_cnt" -lt "1" ]; then
  dinit_user_start
  echo "Session Open" > $home/dinit-user-launcher.log
  sleep 3
# Only stop if this is the last open session:
elif [ "$PAM_TYPE" = "close_session" -a "$session_cnt" -le "1" ]; then
  dinit_user_stop
  echo "Session Close" > $home/dinit-user-launcher.log
fi
